/* src/routes/Theme.svelte generated by Svelte v3.31.1 */
import {
	SvelteComponent,
	append,
	detach,
	element,
	empty,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "../../web_modules/svelte/internal.js";

function create_if_block(ctx) {
	let style;

	return {
		c() {
			style = element("style");
			style.textContent = "/* CSS file */\n\n:root {\n  --background-color: #a19585;\n  --text-color: #171717;\n  --primal-color: #30a5a7;\n}\n\n.light-theme {\n  --background-color: #fffaf4;\n  --text-color: #201f20;\n}\n\n.dark-theme {\n  --background-color: #201f20;\n  --text-color: #fffaf4;\n}\n\nbody {\n  background-color: var(--background-color);\n  color: var(--text-color);\n}";
		},
		m(target, anchor) {
			insert(target, style, anchor);
		},
		d(detaching) {
			if (detaching) detach(style);
		}
	};
}

function create_fragment(ctx) {
	let button;
	let t0_value = /*icons*/ ctx[2][/*index*/ ctx[0]] + "";
	let t0;
	let t1;
	let t2;
	let if_block_anchor;
	let mounted;
	let dispose;
	let if_block = /*index*/ ctx[0] && create_if_block(ctx);

	return {
		c() {
			button = element("button");
			t0 = text(t0_value);
			t1 = space();
			t2 = space();
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		m(target, anchor) {
			insert(target, button, anchor);
			append(button, t0);
			insert(target, t1, anchor);
			insert(target, t2, anchor);
			if (if_block) if_block.m(document.head, null);
			append(document.head, if_block_anchor);

			if (!mounted) {
				dispose = listen(button, "click", /*click_handler*/ ctx[3]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*index*/ 1 && t0_value !== (t0_value = /*icons*/ ctx[2][/*index*/ ctx[0]] + "")) set_data(t0, t0_value);

			if (/*index*/ ctx[0]) {
				if (if_block) {
					
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(button);
			if (detaching) detach(t1);
			if (detaching) detach(t2);
			if (if_block) if_block.d(detaching);
			detach(if_block_anchor);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const themes = ["", "dark-theme", "light-theme"];
	const icons = ["🌙", "🌞", "⭐"];
	let index = 0;

	const click_handler = () => {
		$$invalidate(0, index = (index + 1) % themes.length);
	};

	return [index, themes, icons, click_handler];
}

class Theme extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Theme;